const hamburger=document.querySelector(".hamburger"),menu=document.querySelector(".opened__menu"),close=document.querySelector(".close-icon"),body=document.querySelector("body"),menuList=document.querySelector(".menu__list--opened"),openItem=(hamburger.addEventListener("click",function(e){e.preventDefault(),menu.classList.add("opened__menu--active"),body.classList.add("noscroll")}),close.addEventListener("click",function(e){menu.classList.remove("opened__menu--active"),body.classList.remove("noscroll")}),menuList.addEventListener("click",function(e){e.preventDefault(),menu.classList.remove("opened__menu--active"),body.classList.remove("noscroll")}),e=>{const t=e.closest(".team__item"),a=t.find(".team__content"),n=a.find(".team__content-block");e=n.height();t.addClass("active"),a.height(e)}),closeEveryItem=e=>{const t=e.find(".team__content"),a=e.find(".team__item");a.removeClass("active"),t.height(0)};$(".team__title").click(e=>{const t=$(e.currentTarget);e=t.closest(".team");const a=t.closest(".team__item");a.hasClass("active")?closeEveryItem(e):(closeEveryItem(e),openItem(t))});let myMap;const init=()=>{myMap=new ymaps.Map("map",{center:[57.70887,11.97456],zoom:11,controls:[],garg:!1});let t=[[57.78092897893155,11.989493586343999],[57.72747991234878,11.95783423148954],[57.68380486944938,11.936570485691767],[57.663843251732786,12.031548550255145]],a=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"/src/images/marker.svg",iconImageSize:[46,57],iconImageOffset:[-35,-52]});for(let e=0;e<t.length;e++)a.add(new ymaps.Placemark(t[e]));myMap.geoObjects.add(a),myMap.behaviors.disable("scrollZoom")},mesureWidth=(ymaps.ready(init),e=>{let t=0;var a=$(window).width();const n=e.closest(".products-menu"),s=n.find(".products-menu__title");var o=s.width()*s.length;const r=e.find(".products-menu__container");var e=parseInt(r.css("padding-left")),i=parseInt(r.css("padding-right")),l=window.matchMedia("(max-width: 768px)").matches;return{container:t=l?a-o:500,textContainer:t-i-e}}),closeEveryItemInContainer=e=>{const t=e.find(".products-menu__item"),a=e.find(".products-menu__content");t.removeClass("active"),a.width(0)},openingItem=e=>{const t=e.find(".products-menu__content");var a=mesureWidth(e);const n=e.find(".products-menu__container");e.addClass("active"),t.width(a.container),n.width(a.textContainer)},validateFields=($(".products-menu__title").on("click",e=>{e.preventDefault();const t=$(e.currentTarget),a=t.closest(".products-menu__item");var e=a.hasClass("active"),n=t.closest(".products-menu");e?closeEveryItemInContainer(n):(closeEveryItemInContainer(n),openingItem(a))}),$(".products-menu__close").on("click",e=>{e.preventDefault(),closeEveryItemInContainer($(".products-menu"))}),(e,t)=>{return t.forEach(e=>{e.removeClass("input-error"),""==e.val().trim()&&e.addClass("input-error")}),0==e.find(".input-error").length}),sections=($(".form").submit(e=>{e.preventDefault();const t=$(e.currentTarget),a=t.find("[name='name']"),n=t.find("[name='phone']"),s=t.find("[name='comment']"),o=t.find("[name='to']"),r=$("#modal"),i=r.find("modal__content");e=validateFields(t,[a,n,s,o]);if(r.removeClass("error-modal"),e){const l=$.ajax({url:"https://webdev-api.loftschool.com/sendmail",method:"post",data:{name:a.val(),phone:n.val(),comment:s.val(),to:o.val()}});l.done(e=>{i.text(e.message)}),l.fail(e=>{e=e.responseJSON.message;i.text(e),r.addClass("error-modal")}),l.always(()=>{$.fancybox.open({src:"#modal",type:"inline"})})}}),$(".button-close").click(e=>{e.preventDefault();$(e.currentTarget);$.fancybox.close(),$("#form")[0].reset()}),$(".section")),display=$(".maincontent"),sideMenu=$(".fixed-menu"),menuItems=sideMenu.find(".fixed-menu__item");let inScroll=!1;sections.first().addClass("active");const countSectionPosition=e=>-100*e,changeMenuThemeForSection=e=>{const t=sections.eq(e);"black"==t.attr("data-sidemenu-theme")?sideMenu.addClass("activeClass"):sideMenu.removeClass("ctiveClass")},resetActiveClassForItem=(e,t,a)=>{e.eq(t).addClass(a).siblings().removeClass(a)},performTransition=e=>{if(0==inScroll){inScroll=!0;const t=countSectionPosition(e);changeMenuThemeForSection(e),display.css({transform:`translateY(${t}%)`}),resetActiveClassForItem(sections,e,"active"),sections.eq(e).addClass("active").siblings().removeClass("active"),setTimeout(()=>{inScroll=!1,resetActiveClassForItem(menuItems,e,".fixed-menu__item--active"),sideMenu.find(".fixed-menu__item").eq(e).addClass("fixed-menu__item--active").siblings().removeClass("fixed-menu__item--active")},1300)}},scrollViewport=e=>{const t=sections.filter(".active"),a=t.next(),n=t.prev();"next"==e&&a.length&&performTransition(a.index()),"prev"==e&&n.length&&performTransition(n.index())},playerContainer=($(window).on("wheel",e=>{e=e.originalEvent.deltaY;0<e&&scrollViewport("next"),e<0&&scrollViewport("prev")}),$(window).on("keydown",e=>{var t=e.target.tagName.toLowerCase();if("input"!==t&&"textarea"!==t)switch(e.keyCode){case 38:scrollViewport("prev");break;case 40:scrollViewport("next")}}),$("[data-scroll-to]").click(e=>{e.preventDefault();const t=$(e.currentTarget);e=t.attr("data-scroll-to");const a=$(`[data-section-id=${e}]`);performTransition(a.index())}),$(".player")),playerStart=$(".player__start"),volumeBtn=$(".volume__pic");let eventsInit=()=>{$(".player__start").click(e=>{e.preventDefault();$(e.currentTarget);playerStart.hasClass("player--paused")?player.pauseVideo():player.playVideo(),onPlayerReady()}),$(".player__playback").click(e=>{const t=$(e.currentTarget);var e=e.originalEvent.layerX/t.width()*100,a=player.getDuration()/100*e;$(".player__playback-button").css({left:e+"%"}),player.seekTo(a)}),$(".player__splash__play").click(e=>{player.playVideo()}),$(".volume__pic").click(e=>{e.preventDefault(),volumeBtn.hasClass("volume__pic--nosound")?(player.unMute(),volumeBtn.removeClass("volume__pic--nosound")):(player.mute(),volumeBtn.addClass("volume__pic--nosound"))}),$(".volume__playback").click(e=>{const t=$(e.currentTarget);e=e.originalEvent.layerX/t.width()*100;player.getVolume();$(".volume__playback-button").css({left:e+"%"}),player.setVolume(e)})};const onPlayerReady=()=>{let e;const t=player.getDuration();void 0!==e&&clearInterval(e),e=setInterval(()=>{var e=player.getCurrentTime()/t*100;$(".player__playback-button").css({left:e+"%"})},1e3)},onPlayerStateChange=e=>{switch(e.data){case 1:playerContainer.addClass("active"),playerStart.addClass("player--paused");break;case 2:playerContainer.removeClass("active"),playerStart.removeClass("player--paused")}};function onYouTubeIframeAPIReady(){player=new YT.Player("yt-player",{height:"405",width:"660",videoId:"LXb3EKWsInQ",events:{onReady:onPlayerReady,onStateChange:onPlayerStateChange},playerVars:{controls:0,disablekb:0,showinfo:0,rel:0,autoplay:0,modesbranding:0}})}eventsInit();const slider=$(".slider").bxSlider({pager:!1,controls:!1}),findBlockByAlias=($(".arrow-left").click(e=>{slider.goToPrevSlide()}),$(".arrow-right").click(e=>{slider.goToNextSlide()}),a=>$(".reviews-item").filter((e,t)=>$(t).attr("data-linked-with")==a));$(".reviews-switcher__link").click(e=>{e.preventDefault();const t=$(e.currentTarget);e=t.attr("data-open");const a=findBlockByAlias(e),n=t.closest(".reviews-switcher__item");a.addClass("active").siblings().removeClass("active"),n.addClass("active").siblings().removeClass("active")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
